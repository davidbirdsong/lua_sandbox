diff -Naur lua-5.1.5/CMakeLists.txt Source/lua-5_1_5/CMakeLists.txt
--- lua-5.1.5/CMakeLists.txt	Wed Dec 31 16:00:00 1969
+++ Source/lua-5_1_5/CMakeLists.txt	Wed May 21 13:16:57 2014
@@ -0,0 +1,62 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
+project(lua C)
+
+set(LUA_SOURCE
+src/lapi.c
+src/lauxlib.c
+src/lbaselib.c
+src/lcode.c
+src/ldblib.c
+src/ldebug.c
+src/ldo.c
+src/ldump.c
+src/lfunc.c
+src/lgc.c
+src/linit.c
+src/liolib.c
+src/llex.c
+src/lmathlib.c
+src/lmem.c
+src/loadlib.c
+src/lobject.c
+src/lopcodes.c
+src/loslib.c
+src/lparser.c
+src/lstate.c
+src/lstring.c
+src/lstrlib.c
+src/ltable.c
+src/ltablib.c
+src/ltm.c
+src/lundump.c
+src/lvm.c
+src/lzio.c
+)
+
+set(CMAKE_INSTALL_PREFIX ${EP_BASE})
+if (WIN32)
+    add_library(lua SHARED ${LUA_SOURCE})
+    add_definitions(-DLUA_BUILD_AS_DLL)
+    if (MINGW)
+        set_target_properties(lua PROPERTIES LINK_FLAGS -s)
+        if (ADDRESS_MODEL EQUAL 32)
+            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
+            set_target_properties(lua PROPERTIES LINK_FLAGS "-s -m32")
+        endif()
+    endif()
+elseif(APPLE)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    add_library(lua STATIC ${LUA_SOURCE})
+    add_definitions(-DLUA_USE_LINUX)
+    target_link_libraries(lua -lreadline)
+else()
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    add_library(lua STATIC ${LUA_SOURCE})
+endif()
+
+install(TARGETS lua DESTINATION lib)
+install(FILES src/lua.h src/luaconf.h src/lualib.h src/lauxlib.h DESTINATION include)
diff -Naur lua-5.1.5/src/ldebug.c Source/lua-5_1_5/src/ldebug.c
--- lua-5.1.5/src/ldebug.c	Thu May  8 09:56:26 2008
+++ Source/lua-5_1_5/src/ldebug.c	Wed May 21 13:16:58 2014
@@ -80,6 +80,10 @@
   return L->basehookcount;
 }
 
+LUA_API int lua_gethookcountremaining (lua_State *L) {
+  return L->hookcount;
+}
+
 
 LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {
   int status;
diff -Naur lua-5.1.5/src/loslib.c Source/lua-5_1_5/src/loslib.c
--- lua-5.1.5/src/loslib.c	Fri Jan 18 08:38:18 2008
+++ Source/lua-5_1_5/src/loslib.c	Wed May 21 13:16:58 2014
@@ -154,9 +154,40 @@
       if (*s != '%' || *(s + 1) == '\0')  /* no conversion specifier? */
         luaL_addchar(&b, *s);
       else {
+        cc[1] = *(++s);
+#ifdef _WIN32
+        int valid = 0;
+        switch (*s) {
+          case 'a':
+          case 'A':
+          case 'b':
+          case 'B':
+          case 'c':
+          case 'd':
+          case 'H':
+          case 'I':
+          case 'j':
+          case 'm':
+          case 'M':
+          case 'p':
+          case 'S':
+          case 'U':
+          case 'w':
+          case 'W':
+          case 'x':
+          case 'X':
+          case 'y':
+          case 'Y':
+          case 'Z':
+          case 'z':
+          case '%':
+            valid = 1;
+            break;
+        }
+        if (!valid) continue;
+#endif
         size_t reslen;
         char buff[200];  /* should be big enough for any conversion result */
-        cc[1] = *(++s);
         reslen = strftime(buff, sizeof(buff), cc, stm);
         luaL_addlstring(&b, buff, reslen);
       }
diff -Naur lua-5.1.5/src/lua.h Source/lua-5_1_5/src/lua.h
--- lua-5.1.5/src/lua.h	Fri Jan 13 12:36:20 2012
+++ Source/lua-5_1_5/src/lua.h	Wed May 21 13:16:58 2014
@@ -341,6 +341,7 @@
 LUA_API lua_Hook lua_gethook (lua_State *L);
 LUA_API int lua_gethookmask (lua_State *L);
 LUA_API int lua_gethookcount (lua_State *L);
+LUA_API int lua_gethookcountremaining (lua_State *L);
 
 
 struct lua_Debug {
